class MissingOptionalAnnotationPassingTestInput {

    constructor() {}
    constructor(arg1?) {}
    constructor(arg1, arg2?) {}
    constructor(arg1, arg2?, arg3?) {}

    voidMethod() {}
    unaryMethod(arg1) {}
    bindaryMethod(arg1, arg2?) {}
    ternaryMethod(arg1, arg2?, arg3?) {}

    private arrow0 = () => {};
    private arrow1 = (arg?) => {};
    private arrow2 = (arg1, arg2?) => {};
    private arrow3 = (arg1, arg2?, arg3?) => {};

    private literalFunction0 = function() {};
    private literalFunction1 = function(arg?) {};
    private literalFunction2 = function(arg1, arg2?) {};
    private literalFunction3 = function(arg1, arg2?, arg3?) {};

}

// these declarations need to be made outside of a class
function function0() {}
function function1(arg) {}
function function2(arg1, arg2?) {}
function function3(arg1, arg2?, arg3?) {}

function something(data : Object = {}, others: any) { }
                                       ~~~~~~           [0 % ('others: any')]

class MissingOptionalAnnotationPassingTestInput {

    constructor(optionalArg1?, requiredArg2) {}
                               ~~~~~~~~~~~~     [0 % ('requiredArg2')]
    constructor(requiredArg1, optionalArg2?, requiredArg3) {}
                                             ~~~~~~~~~~~~     [0 % ('requiredArg3')]

    bindaryMethod(optionalArg1?, requiredArg2) {}
                                 ~~~~~~~~~~~~     [0 % ('requiredArg2')]
    ternaryMethod(requiredArg1, optionalArg2?, requiredArg3) {}
                                               ~~~~~~~~~~~~     [0 % ('requiredArg3')]

    private arrow2 = (optionalArg1?, requiredArg2) => {};
                                     ~~~~~~~~~~~~         [0 % ('requiredArg2')]
    private arrow3 = (requiredArg1, optionalArg2?, requiredArg3) => {};
                                                   ~~~~~~~~~~~~         [0 % ('requiredArg3')]

    private literalFunction2 = function(optionalArg1?, requiredArg2) {};
                                                       ~~~~~~~~~~~~      [0 % ('requiredArg2')]
    private literalFunction3 = function(requiredArg1, optionalArg2?, requiredArg3) {};
                                                                     ~~~~~~~~~~~~      [0 % ('requiredArg3')]

}

// these declarations need to be made outside of a class
function function2(optionalArg1?, requiredArg2) {}
                                  ~~~~~~~~~~~~     [0 % ('requiredArg2')]
function function3(requiredArg1, optionalArg2?, requiredArg3) {}
                                                ~~~~~~~~~~~~     [0 % ('requiredArg3')]
[0]: Argument following optional argument missing optional annotation:  %s
